/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockUSDT,
  MockUSDTInterface,
} from "../../../contracts/MockTokens.sol/MockUSDT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "snapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001332380380620013328339810160408190526200003491620003da565b604051806040016040528060118152602001705465746865722055534420284d6f636b2960781b81525060405180604001604052806005815260200164135554d11560da1b81525060066501d1a94a20008480858581600390816200009a9190620004b2565b506004620000a98282620004b2565b5050506001600160a01b038116620000dc57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000e78162000118565b506005805460ff60a01b1916600160a01b60ff8616021790556200010c81836200016a565b505050505050620005a6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001965760405163ec442f0560e01b815260006004820152602401620000d3565b620001a460008383620001a8565b5050565b60085415620001e7576001600160a01b03831615620001cc57620001cc8362000237565b6001600160a01b03821615620001e757620001e78262000237565b620001f4838383620002a7565b6000600854118015620002165750600854600090815260076020526040902054155b1562000232576002546008546000908152600760205260409020555b505050565b60006008541180156200026d575060085460009081526006602090815260408083206001600160a01b0385168452909152902054155b15620002a4576001600160a01b03811660008181526020818152604080832054600854845260068352818420948452939091529020555b50565b6001600160a01b038316620002d6578060026000828254620002ca91906200057e565b909155506200034a9050565b6001600160a01b038316600090815260208190526040902054818110156200032b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000d3565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620003685760028054829003905562000387565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003cd91815260200190565b60405180910390a3505050565b600060208284031215620003ed57600080fd5b81516001600160a01b03811681146200040557600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200043757607f821691505b6020821081036200045857634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000232576000816000526020600020601f850160051c81016020861015620004895750805b601f850160051c820191505b81811015620004aa5782815560010162000495565b505050505050565b81516001600160401b03811115620004ce57620004ce6200040c565b620004e681620004df845462000422565b846200045e565b602080601f8311600181146200051e5760008415620005055750858301515b600019600386901b1c1916600185901b178555620004aa565b600085815260208120601f198616915b828110156200054f578886015182559484019460019091019084016200052e565b50858210156200056e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620005a057634e487b7160e01b600052601160045260246000fd5b92915050565b610d7c80620005b66000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a25780639711715a116100715780639711715a14610224578063981b24d01461022c578063a9059cbb1461023f578063dd62ed3e14610252578063f2fde38b1461028b57600080fd5b806370a08231146101d0578063715018a6146101f95780638da5cb5b1461020157806395d89b411461021c57600080fd5b8063313ce567116100de578063313ce56714610176578063449a52f8146101955780634ee2cd7e146101aa57806368573107146101bd57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b61011861029e565b6040516101259190610abd565b60405180910390f35b61014161013c366004610b28565b610330565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610b52565b61034a565b600554600160a01b900460ff1660405160ff9091168152602001610125565b6101a86101a3366004610b28565b61036e565b005b6101556101b8366004610b28565b610384565b6101a86101cb366004610bda565b610431565b6101556101de366004610c46565b6001600160a01b031660009081526020819052604090205490565b6101a86104e3565b6005546040516001600160a01b039091168152602001610125565b6101186104f7565b610155610506565b61015561023a366004610c68565b610558565b61014161024d366004610b28565b6105e0565b610155610260366004610c81565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101a8610299366004610c46565b6105ee565b6060600380546102ad90610cb4565b80601f01602080910402602001604051908101604052809291908181526020018280546102d990610cb4565b80156103265780601f106102fb57610100808354040283529160200191610326565b820191906000526020600020905b81548152906001019060200180831161030957829003601f168201915b5050505050905090565b60003361033e81858561062c565b60019150505b92915050565b60003361035885828561063e565b6103638585856106bc565b506001949350505050565b61037661071b565b6103808282610748565b5050565b60006008548211156103d75760405162461bcd60e51b815260206004820152601760248201527614db985c1cda1bdd08191bd95cc81b9bdd08195e1a5cdd604a1b60448201526064015b60405180910390fd5b60008281526006602090815260408083206001600160a01b038716845290915290205415610428575060008181526006602090815260408083206001600160a01b0386168452909152902054610344565b50600092915050565b61043961071b565b8281146104815760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b60448201526064016103ce565b60005b838110156104dc576104d48585838181106104a1576104a1610cee565b90506020020160208101906104b69190610c46565b8484848181106104c8576104c8610cee565b90506020020135610748565b600101610484565b5050505050565b6104eb61071b565b6104f5600061077e565b565b6060600480546102ad90610cb4565b600061051061071b565b6008805490600061052083610d1a565b90915550506008546040517f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb6790600090a25060085490565b60006008548211156105a65760405162461bcd60e51b815260206004820152601760248201527614db985c1cda1bdd08191bd95cc81b9bdd08195e1a5cdd604a1b60448201526064016103ce565b6000828152600760205260409020541515806105c0575081155b156105d8575060009081526007602052604090205490565b600254610344565b60003361033e8185856106bc565b6105f661071b565b6001600160a01b03811661062057604051631e4fbdf760e01b8152600060048201526024016103ce565b6106298161077e565b50565b61063983838360016107d0565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146106b657818110156106a757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103ce565b6106b6848484840360006107d0565b50505050565b6001600160a01b0383166106e657604051634b637e8f60e11b8152600060048201526024016103ce565b6001600160a01b0382166107105760405163ec442f0560e01b8152600060048201526024016103ce565b6106398383836108a5565b6005546001600160a01b031633146104f55760405163118cdaa760e01b81523360048201526024016103ce565b6001600160a01b0382166107725760405163ec442f0560e01b8152600060048201526024016103ce565b610380600083836108a5565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166107fa5760405163e602df0560e01b8152600060048201526024016103ce565b6001600160a01b03831661082457604051634a1406b160e11b8152600060048201526024016103ce565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156106b657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161089791815260200190565b60405180910390a350505050565b600854156108dd576001600160a01b038316156108c5576108c583610928565b6001600160a01b038216156108dd576108dd82610928565b6108e8838383610993565b60006008541180156109095750600854600090815260076020526040902054155b1561063957600254600854600090815260076020526040902055505050565b600060085411801561095d575060085460009081526006602090815260408083206001600160a01b0385168452909152902054155b15610629576001600160a01b03166000818152602081815260408083205460085484526006835281842094845293909152902055565b6001600160a01b0383166109be5780600260008282546109b39190610d33565b90915550610a309050565b6001600160a01b03831660009081526020819052604090205481811015610a115760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103ce565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a4c57600280548290039055610a6b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ab091815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b81811015610aeb57858101830151858201604001528201610acf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b2357600080fd5b919050565b60008060408385031215610b3b57600080fd5b610b4483610b0c565b946020939093013593505050565b600080600060608486031215610b6757600080fd5b610b7084610b0c565b9250610b7e60208501610b0c565b9150604084013590509250925092565b60008083601f840112610ba057600080fd5b50813567ffffffffffffffff811115610bb857600080fd5b6020830191508360208260051b8501011115610bd357600080fd5b9250929050565b60008060008060408587031215610bf057600080fd5b843567ffffffffffffffff80821115610c0857600080fd5b610c1488838901610b8e565b90965094506020870135915080821115610c2d57600080fd5b50610c3a87828801610b8e565b95989497509550505050565b600060208284031215610c5857600080fd5b610c6182610b0c565b9392505050565b600060208284031215610c7a57600080fd5b5035919050565b60008060408385031215610c9457600080fd5b610c9d83610b0c565b9150610cab60208401610b0c565b90509250929050565b600181811c90821680610cc857607f821691505b602082108103610ce857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610d2c57610d2c610d04565b5060010190565b8082018082111561034457610344610d0456fea26469706673582212207138f3b63cc4811e39555e18d636fd322732aca8680ebe6f890ea59fb93e517264736f6c63430008180033";

type MockUSDTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUSDTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUSDT__factory extends ContractFactory {
  constructor(...args: MockUSDTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MockUSDT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUSDT__factory {
    return super.connect(runner) as MockUSDT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUSDTInterface {
    return new Interface(_abi) as MockUSDTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockUSDT {
    return new Contract(address, _abi, runner) as unknown as MockUSDT;
  }
}
